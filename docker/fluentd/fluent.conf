<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<filter docker.app>
  @type grep
  <regexp>
    key log
    pattern /postfix\/(?:smtp|error)\[\d+\]: [0-9A-Za-z]+: to=<[^>]+>, relay=\S*, delay=[\d.]+, delays=[\d./]+, dsn=\S+, status=\S+ \(.+\)/
  </regexp>
</filter>

<filter docker.app>
  @type parser
  key_name log
  <parse>
    @type regexp
    expression /(?<timestamp>\w+ \d+ \d+:\d+:\d+) (?<hostname>\S+) postfix\/(?:smtp|error)\[(?<pid>\d+)\]: (?<id>[0-9A-Za-z]+): to=<(?<recipient>[^>]+)>, relay=(?<relay>\S*), delay=(?<delay>[\d.]+), delays=(?<delays>[\d./]+), dsn=(?<dsn>\S+), status=(?<status>\S+) \((?<response>.+)\)/
  </parse>
  reserve_data true
</filter>

<filter docker.app>
  @type record_transformer
  remove_keys container_id,container_name,source,log,timestamp,hostname,pid,recipient,relay,delay,delays,dsn
</filter>

<match docker.app>
  @type http
  endpoint "http://app:80/api/v1/postfix"
  headers "{\"Authorization\":\"#{ENV['API_TOKEN']}\"}"
  open_timeout 2
  json_array true
  retryable_response_codes [503]
  <format>
    @type json
  </format>
  <buffer>
    flush_interval 10s
    chunk_limit_size 256k
    chunk_limit_records 1000
  </buffer>
</match>
